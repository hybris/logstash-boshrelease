input {
  redis {
    type => "syslog"
    host => "<%= p("redis.host") %>"
    port => <%= p("redis.port") %> 

    # these settings should match the output of the agent
    data_type => "list"
    key => "<%= p('logstash.redis.key') %>"
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "\d <\d*>\d* %{TIMESTAMP_ISO8601:syslog_timestamp} %{USER:syslog_user} %{DATA:app_id} \[%{DATA:cf_component}\] - - %{GREEDYDATA:message}" }
      add_field => {
        "received_at" => "%{@timestamp}"
      }
      overwrite => [ "message" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" , "ISO8601"]
    }
  }
}

output {
  stdout { codec => json }

  elasticsearch_http {
    host => "<%= p("elasticsearch.host") %>"
    index => "%{app_id}-%{+YYYY.MM.dd}"
  }
}
