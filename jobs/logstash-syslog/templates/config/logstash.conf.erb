input {
  tcp {
    port  => <%= p('logstash.syslog.port') %>
    type  => syslog
  }

  udp {
    port  => <%= p('logstash.syslog.port') %>
    type  => syslog
  }
}


filter {

  if [message] == '' and [message] !~ /^.+$/ {
    drop { }
  }

  # ignore particularly useless lines
  if [message] =~ /^\s*$/ or [message] =~ /^#.*$/ {
    drop { }
  }

  # trim excessively long messages
  ruby {
    code => "(event['message'] = event['message'][0,<%= p("logstash.message_max_size") %>] and (event['tags'] ||= []) << '_groktrimmed') if event['message'] and event['message'].length > <%= p("logstash.message_max_size") %>"
  }

  # trim excess whitespace
  mutate {
    strip => [ "message" ]
  }

  # drop messages from loggregator RTR and APP because they are managed by log-parser app
  if [message] =~ /loggregator/ and [message] =~ /\[(RTR|App\/[0-9]+)\]/ {
    drop { }
  }

}


output {
<% if p("logstash.redis.host", nil) %>
  redis {
    host          => "<%= p("logstash.redis.host") %>"
    port          => <%= p("logstash.redis.port") %>
    batch         => <%= p('logstash.redis.batch') %>
    batch_events  => <%= p('logstash.redis.batch_events') %>
    workers       => <%= p('logstash.redis.workers') %>
    key           => "<%= p('logstash.redis.key') %>"
    data_type     => "list"
  }
<% else %>
  stdout { codec => rubydebug { metadata => true } }
<% end %>
}
